print(paste('Media Aritm?tica = ', r.mean))
print(paste('Mediana = ', r.median))
print(paste('Moda = ', r.mode))
print(paste('Varianza = ', r.var))
print(paste('Desviaci?n Est?ndar = ', r.sd))
print(paste('Coeficiente de Variaci?n = ', r.cv))
print("Cuartiles:")
print(quantile(my_sample))
print("Intervalo de Confianza para la Media:")
print(my_interval_media)
print("Intervalo de Confianza para la Varianza:")
print(my_interval_var)
print("**********************************************************************")
}
#Muestras con reemplazo
for (i in 1:4){
my_sample <- sample(population, index[i], replace=TRUE)
r.mean <- mean(my_sample)
r.median <- median(my_sample)
r.mode <- mlv(my_sample, method = "meanshift")
r.var <- var(my_sample)
r.sd <- sd(my_sample)
r.cv <- r.sd / r.mean
my_interval_media <- IntervalMedia(my_sample, 0.05, r.var)
my_interval_var <- IntervalVar(my_sample, 0.05)
#Imprimir todo:
print("**********************************************************************")
print(paste("Estad?sticos Descriptivos para muestra con reemplazo de tama?o: ", index[i]))
print("**********************************************************************")
print(paste('Media Aritm?tica = ', r.mean))
print(paste('Mediana = ', r.median))
print(paste('Moda = ', r.mode))
print(paste('Varianza = ', r.var))
print(paste('Desviaci?n Est?ndar = ', r.sd))
print(paste('Coeficiente de Variaci?n = ', r.cv))
print("Cuartiles:")
print(quantile(my_sample))
print("Intervalo de Confianza para la Media:")
print(my_interval_media)
print("Intervalo de Confianza para la Varianza:")
print(my_interval_var)
print("**********************************************************************")
}
#Medidas de tendencia central para la poblaci?n
r.mean <- mean(population)
r.median <- median(population)
r.mode <- mlv(population, method = "meanshift")
r.var <- var(population)
r.sd <- sd(population)
r.cv <- r.sd / r.mean
#Imprimir todo:
print("**********************************************************************")
print("Estad?sticos Descriptivos para la poblaci?n: 500")
print("**********************************************************************")
print(paste('Media Aritm?tica = ', r.mean))
print(paste('Mediana = ', r.median))
print(paste('Moda = ', r.mode))
print(paste('Varianza = ', r.var))
print(paste('Desviaci?n Est?ndar = ', r.sd))
print(paste('Coeficiente de Variaci?n = ', r.cv))
print("Cuartiles:")
print(quantile(population))
my_interval_media <- IntervalMedia(population, 0.05, r.var)
my_interval_var <- IntervalVar(population, 0.05)
print("Intervalo de Confianza para la Media:")
print(my_interval_media)
print("Intervalo de Confianza para la Varianza:")
print(my_interval_var)
print("**********************************************************************")
#Gr?ficos para la poblaci?n
par(mfrow = c(1,2))
boxplot(population, col="red3", main = "Gráfico de caja y bigote", ylab = "Gramos de azúcar")
hist(population,freq=F,col="green3", main = "Histograma", xlab = "Gramos de azúcar", ylab = '');
box()
clear)=
#install.packages("modeest")
library(modeest)
# Importamos la tabla con los datos de las pel?culas
my_data <- read.csv("IMDB.csv", sep = ",", dec = ".")
title <- my_data$Title
#Para entender datos num?ricos que aparecen acompa?ados de caracteres no num?ricos
convertCurrency <- function(currency){
currency1 <- sub('$','',as.character(currency), fixed=TRUE)
currency2 <- as.numeric(gsub('\\,','',as.character(currency1)))
}
convertTime <- function(time){
time1 <- as.numeric(sub(' min','',as.character(time), fixed=TRUE))
}
#Par?metro 1: Rating
rating <- my_data$Rating
print("**********************************************************************")
print("Estad?sticos Descriptivos para el Rating de las pel?culas")
print("**********************************************************************")
r_mean <- mean(rating)
r_sd <- sd(rating)
print(paste('Media Aritm?tica = ', r_mean))
print(paste('Mediana = ', median(rating)))
print(paste('Moda = ', mlv(rating, method = "meanshift")))
print(paste('Varianza = ', var(rating)))
print(paste('Desviaci?n Est?ndar = ', r_sd))
print(paste('Coeficiente de Variaci?n = ', r_sd / r_mean))
print("Cuartiles:")
print(quantile(rating))
##para las conclusiones, las peliculas que cumplen con la moda
#for (i in (1:length(rating))){
#  r <- rating[i]
#  if (! is.na(r) && r == mfv(rating, na_rm = TRUE)){
#    print(title[i])
#  }
#}
print("**********************************************************************")
#Par?metro 2: Total de Votos
my_data$TotalVotes <- convertCurrency(my_data$TotalVotes)
totalvotes <- my_data$TotalVotes
print("**********************************************************************")
print("Estad?sticos Descriptivos para el Total de Votos de las pel?culas")
print("**********************************************************************")
tv_mean <- mean(totalvotes)
tv_sd <- sd(totalvotes)
print(paste('Media Aritm?tica = ', tv_mean))
print(paste('Mediana = ', median(totalvotes)))
print(paste('Moda = ', mlv(totalvotes, method = "meanshift")))
print(paste('Varianza = ', var(totalvotes)))
print(paste('Desviaci?n Est?ndar = ', tv_sd))
print(paste('Coeficiente de Variaci?n = ', tv_sd / tv_mean))
print("Cuartiles:")
print(quantile(totalvotes))
##para las conclusiones, las peliculas que cumplen con la moda
#for (i in (1:length(totalvotes))){
#  r <- totalvotes[i]
#  if (! is.na(r) && r == mfv(totalvotes, na_rm = TRUE)){
#    print(title[i])
#  }
#}
print("**********************************************************************")
#Par?metro 3: Duraci?n
my_data$Runtime <- convertTime(my_data$Runtime)
runtime <- my_data$Runtime
print("**********************************************************************")
print("Estad?sticos Descriptivos para la Duraci?n de las pel?culas")
print("**********************************************************************")
ru_mean <- mean(runtime, na.rm = TRUE)
ru_sd <- sd(runtime, na.rm = TRUE)
print(paste('Media Aritm?tica = ', ru_mean))
print(paste('Mediana = ', median(runtime, na.rm = TRUE)))
print(paste('Moda = ', mfv(runtime, na_rm = TRUE)))
print(paste('Varianza = ', var(runtime, na.rm = TRUE)))
print(paste('Desviaci?n Est?ndar = ', ru_sd))
print(paste('Coeficiente de Variaci?n = ', ru_sd / ru_mean))
print("Cuartiles:")
print(quantile(runtime, na.rm = TRUE))
##para las conclusiones, las peliculas que cumplen con la moda
#for (i in (1:length(runtime))){
#  r <- runtime[i]
#  if (! is.na(r) && r == mfv(runtime, na_rm = TRUE)){
#    print(title[i])
#  }
#}
print("**********************************************************************")
#Gr?ficos
par(mfrow = c(2,3))
#Cajas de antena y bigote (Rating, TotalVotes, Runtime)
boxplot(rating,main = "Rating", col="red3", ylab = "Puntuaci?n")
boxplot(totalvotes,main = "Total de Votos", col="red3", ylab = "Votos")
boxplot(runtime,main="Tiempo de Duraci?n", col="red3", ylab = "Minutos")
#Histogramas (Rating, TotalVotes, Runtime)
hist(rating,freq=F,col="green3",main="Rating", xlab = "Puntuaci?n", ylab = '');
box()
hist(totalvotes,freq=F,col="green3",main="Total de Votos", xlab = "Votos", ylab = '');
box()
hist(runtime,freq=F,col="green3",main="Tiempo de Duraci?n", xlab = "Minutos", ylab = '');
box()
#install.packages("modeest")
library(modeest)
# Importamos la tabla con los datos de las pel?culas
my_data <- read.csv("IMDB.csv", sep = ",", dec = ".")
title <- my_data$Title
#Para entender datos num?ricos que aparecen acompa?ados de caracteres no num?ricos
convertCurrency <- function(currency){
currency1 <- sub('$','',as.character(currency), fixed=TRUE)
currency2 <- as.numeric(gsub('\\,','',as.character(currency1)))
}
convertTime <- function(time){
time1 <- as.numeric(sub(' min','',as.character(time), fixed=TRUE))
}
#Par?metro 1: Rating
rating <- my_data$Rating
print("**********************************************************************")
print("Estad?sticos Descriptivos para el Rating de las pel?culas")
print("**********************************************************************")
r_mean <- mean(rating)
r_sd <- sd(rating)
print(paste('Media Aritm?tica = ', r_mean))
print(paste('Mediana = ', median(rating)))
print(paste('Moda = ', mlv(rating, method = "meanshift")))
print(paste('Varianza = ', var(rating)))
print(paste('Desviaci?n Est?ndar = ', r_sd))
print(paste('Coeficiente de Variaci?n = ', r_sd / r_mean))
print("Cuartiles:")
print(quantile(rating))
##para las conclusiones, las peliculas que cumplen con la moda
#for (i in (1:length(rating))){
#  r <- rating[i]
#  if (! is.na(r) && r == mfv(rating, na_rm = TRUE)){
#    print(title[i])
#  }
#}
print("**********************************************************************")
#Par?metro 2: Total de Votos
my_data$TotalVotes <- convertCurrency(my_data$TotalVotes)
totalvotes <- my_data$TotalVotes
print("**********************************************************************")
print("Estad?sticos Descriptivos para el Total de Votos de las pel?culas")
print("**********************************************************************")
tv_mean <- mean(totalvotes)
tv_sd <- sd(totalvotes)
print(paste('Media Aritm?tica = ', tv_mean))
print(paste('Mediana = ', median(totalvotes)))
print(paste('Moda = ', mlv(totalvotes, method = "meanshift")))
print(paste('Varianza = ', var(totalvotes)))
print(paste('Desviaci?n Est?ndar = ', tv_sd))
print(paste('Coeficiente de Variaci?n = ', tv_sd / tv_mean))
print("Cuartiles:")
print(quantile(totalvotes))
##para las conclusiones, las peliculas que cumplen con la moda
#for (i in (1:length(totalvotes))){
#  r <- totalvotes[i]
#  if (! is.na(r) && r == mfv(totalvotes, na_rm = TRUE)){
#    print(title[i])
#  }
#}
print("**********************************************************************")
#Par?metro 3: Duraci?n
my_data$Runtime <- convertTime(my_data$Runtime)
runtime <- my_data$Runtime
print("**********************************************************************")
print("Estad?sticos Descriptivos para la Duraci?n de las pel?culas")
print("**********************************************************************")
ru_mean <- mean(runtime, na.rm = TRUE)
ru_sd <- sd(runtime, na.rm = TRUE)
print(paste('Media Aritm?tica = ', ru_mean))
print(paste('Mediana = ', median(runtime, na.rm = TRUE)))
print(paste('Moda = ', mfv(runtime, na_rm = TRUE)))
print(paste('Varianza = ', var(runtime, na.rm = TRUE)))
print(paste('Desviaci?n Est?ndar = ', ru_sd))
print(paste('Coeficiente de Variaci?n = ', ru_sd / ru_mean))
print("Cuartiles:")
print(quantile(runtime, na.rm = TRUE))
##para las conclusiones, las peliculas que cumplen con la moda
#for (i in (1:length(runtime))){
#  r <- runtime[i]
#  if (! is.na(r) && r == mfv(runtime, na_rm = TRUE)){
#    print(title[i])
#  }
#}
print("**********************************************************************")
#Gr?ficos
par(mfrow = c(2,3))
#Cajas de antena y bigote (Rating, TotalVotes, Runtime)
boxplot(rating,main = "Rating", col="red3", ylab = "Puntuaci?n")
boxplot(totalvotes,main = "Total de Votos", col="red3", ylab = "Votos")
boxplot(runtime,main="Tiempo de Duraci?n", col="red3", ylab = "Minutos")
#Histogramas (Rating, TotalVotes, Runtime)
hist(rating,freq=F,col="green3",main="Rating", xlab = "Puntuaci?n", ylab = '');
box()
hist(totalvotes,freq=F,col="green3",main="Total de Votos", xlab = "Votos", ylab = '');
box()
hist(runtime,freq=F,col="green3",main="Tiempo de Duraci?n", xlab = "Minutos", ylab = '');
box()
install.packages("modeest")
install.packages("modeest")
#install.packages("modeest")
library(modeest)
# Importamos la tabla con los datos de las pel?culas
my_data <- read.csv("IMDB.csv", sep = ",", dec = ".")
title <- my_data$Title
#Para entender datos num?ricos que aparecen acompa?ados de caracteres no num?ricos
convertCurrency <- function(currency){
currency1 <- sub('$','',as.character(currency), fixed=TRUE)
currency2 <- as.numeric(gsub('\\,','',as.character(currency1)))
}
convertTime <- function(time){
time1 <- as.numeric(sub(' min','',as.character(time), fixed=TRUE))
}
#Par?metro 1: Rating
rating <- my_data$Rating
print("**********************************************************************")
print("Estad?sticos Descriptivos para el Rating de las pel?culas")
print("**********************************************************************")
r_mean <- mean(rating)
r_sd <- sd(rating)
print(paste('Media Aritm?tica = ', r_mean))
print(paste('Mediana = ', median(rating)))
print(paste('Moda = ', mlv(rating, method = "meanshift")))
print(paste('Varianza = ', var(rating)))
print(paste('Desviaci?n Est?ndar = ', r_sd))
print(paste('Coeficiente de Variaci?n = ', r_sd / r_mean))
print("Cuartiles:")
print(quantile(rating))
##para las conclusiones, las peliculas que cumplen con la moda
#for (i in (1:length(rating))){
#  r <- rating[i]
#  if (! is.na(r) && r == mfv(rating, na_rm = TRUE)){
#    print(title[i])
#  }
#}
print("**********************************************************************")
#Par?metro 2: Total de Votos
my_data$TotalVotes <- convertCurrency(my_data$TotalVotes)
totalvotes <- my_data$TotalVotes
print("**********************************************************************")
print("Estad?sticos Descriptivos para el Total de Votos de las pel?culas")
print("**********************************************************************")
tv_mean <- mean(totalvotes)
tv_sd <- sd(totalvotes)
print(paste('Media Aritm?tica = ', tv_mean))
print(paste('Mediana = ', median(totalvotes)))
print(paste('Moda = ', mlv(totalvotes, method = "meanshift")))
print(paste('Varianza = ', var(totalvotes)))
print(paste('Desviaci?n Est?ndar = ', tv_sd))
print(paste('Coeficiente de Variaci?n = ', tv_sd / tv_mean))
print("Cuartiles:")
print(quantile(totalvotes))
##para las conclusiones, las peliculas que cumplen con la moda
#for (i in (1:length(totalvotes))){
#  r <- totalvotes[i]
#  if (! is.na(r) && r == mfv(totalvotes, na_rm = TRUE)){
#    print(title[i])
#  }
#}
print("**********************************************************************")
#Par?metro 3: Duraci?n
my_data$Runtime <- convertTime(my_data$Runtime)
runtime <- my_data$Runtime
print("**********************************************************************")
print("Estad?sticos Descriptivos para la Duraci?n de las pel?culas")
print("**********************************************************************")
ru_mean <- mean(runtime, na.rm = TRUE)
ru_sd <- sd(runtime, na.rm = TRUE)
print(paste('Media Aritm?tica = ', ru_mean))
print(paste('Mediana = ', median(runtime, na.rm = TRUE)))
print(paste('Moda = ', mfv(runtime, na_rm = TRUE)))
print(paste('Varianza = ', var(runtime, na.rm = TRUE)))
print(paste('Desviaci?n Est?ndar = ', ru_sd))
print(paste('Coeficiente de Variaci?n = ', ru_sd / ru_mean))
print("Cuartiles:")
print(quantile(runtime, na.rm = TRUE))
##para las conclusiones, las peliculas que cumplen con la moda
#for (i in (1:length(runtime))){
#  r <- runtime[i]
#  if (! is.na(r) && r == mfv(runtime, na_rm = TRUE)){
#    print(title[i])
#  }
#}
print("**********************************************************************")
#Gr?ficos
par(mfrow = c(2,3))
#Cajas de antena y bigote (Rating, TotalVotes, Runtime)
boxplot(rating,main = "Rating", col="red3", ylab = "Puntuaci?n")
boxplot(totalvotes,main = "Total de Votos", col="red3", ylab = "Votos")
boxplot(runtime,main="Tiempo de Duraci?n", col="red3", ylab = "Minutos")
#Histogramas (Rating, TotalVotes, Runtime)
hist(rating,freq=F,col="green3",main="Rating", xlab = "Puntuaci?n", ylab = '');
box()
hist(totalvotes,freq=F,col="green3",main="Total de Votos", xlab = "Votos", ylab = '');
box()
hist(runtime,freq=F,col="green3",main="Tiempo de Duraci?n", xlab = "Minutos", ylab = '');
box()
# Importamos la tabla con los datos de las pel?culas
my_data <- read.csv("IMDB.csv", sep = ",", dec = ".")
#Para entender datos num?ricos que aparecen acompa?ados de caracteres no num?ricos
convertCurrency <- function(currency){
currency1 <- sub('$','',as.character(currency), fixed=TRUE)
currency2 <- sub(' ', '', as.character(currency1), fixed = TRUE)
currenc32 <- as.numeric(gsub('\\,','',as.character(currency2)))
}
convertGenre <- function(currency){
currency1 <- gsub(' ','',as.character(currency), fixed=TRUE)
}
my_data$Budget <- convertCurrency(my_data$Budget)
budget <- my_data$Budget
my_data$Genre1 <- convertGenre(my_data$Genre1)
genre1 <- my_data$Genre1
my_data$Genre2 <- convertGenre(my_data$Genre2)
genre2 <- my_data$Genre2
my_data$Genre3 <- convertGenre(my_data$Genre3)
genre3 <- my_data$Genre3
#Buscar que haya Acci?n y Drama en los tres posibles g?neros
total_drama_budget <- 0
total_action_budget <- 0
total_drama_film <- 0
total_action_film <- 0
count_drama_na <- 0
count_action_na <- 0
for (i in (1:length(budget))){
r <- budget[i]
#Buscando Drama
if(genre1[i] == "Drama" | genre2[i] == "Drama" | genre3[i] == "Drama"){
total_drama_film <- total_drama_film + 1
if(is.na(r)){
count_drama_na <- count_drama_na + 1
}
else{
total_drama_budget <- total_drama_budget + r
}
}
#Buscando Acci?n
if(genre1[i] == "Action" | genre2[i] == "Action" | genre3[i] == "Action"){
total_action_film <- total_action_film + 1
if(is.na(r)){
count_action_na <- count_action_na + 1
}
else{
total_action_budget <- total_action_budget + r
}
}
}
#Promedio de presupuesto para pel?culas de Drama
drama_mean <-  total_drama_budget / (total_drama_film - count_drama_na)
total_drama_budget <- total_drama_budget + drama_mean*count_drama_na
drama_mean <- total_drama_budget / total_drama_film
#Promedio de presupuesto para pel?culas de Acci?n
action_mean <-  total_action_budget / (total_action_film - count_action_na)
total_action_budget <- total_action_budget + action_mean*count_action_na
action_mean <- total_action_budget / total_action_film
#Preprocesamiento de datos para el presupuesto de pel?culas de Drama (sin NA)
only_drama_budget <- my_data[my_data$Genre1 == "Drama" | my_data$Genre2 == "Drama" | my_data$Genre3 == "Drama",]
only_drama_budget <- na.omit(only_drama_budget$Budget)
#varianza de pel?culas de Drama
var_drama <- var(only_drama_budget)
#Preprocesamiento de datos para el presupuesto de pel?culas de Acci?n (sin NA)
only_action_budget <- my_data[my_data$Genre1 == "Action" | my_data$Genre2 == "Action" | my_data$Genre3 == "Action",]
only_action_budget <- na.omit(only_action_budget$Budget)
#varianza de pel?culas de Acci?n
var_action <- var(only_action_budget)
#Para la Prueba de Hip?tesis de Medias se debe hacer primero una Prueba de Hip?tesis para las Varianzas
#Prueba de Hip?tesis de igualdad contra diferencia para las varianzas
var.test(only_drama_budget, only_action_budget)
#Como las varianzas son distintas, se hace la Prueba de Hip?tesis de Medias correspondiente
t.test(only_drama_budget, only_action_budget, alternative = "two.sided", var.equal = FALSE, conf.level = 0.05)
# Importamos la tabla con los datos de las pel?culas
my_data <- read.csv("IMDB.csv", sep = ",", dec = ".")
#Para entender datos num?ricos que aparecen acompa?ados de caracteres no num?ricos
convertCurrency <- function(currency){
currency1 <- sub('$','',as.character(currency), fixed=TRUE)
currency2 <- sub(' ', '', as.character(currency1), fixed = TRUE)
currenc32 <- as.numeric(gsub('\\,','',as.character(currency2)))
}
convertGenre <- function(currency){
currency1 <- gsub(' ','',as.character(currency), fixed=TRUE)
}
my_data$Budget <- convertCurrency(my_data$Budget)
budget <- my_data$Budget
my_data$Genre1 <- convertGenre(my_data$Genre1)
genre1 <- my_data$Genre1
my_data$Genre2 <- convertGenre(my_data$Genre2)
genre2 <- my_data$Genre2
my_data$Genre3 <- convertGenre(my_data$Genre3)
genre3 <- my_data$Genre3
#Buscar que haya Acci?n y Drama en los tres posibles g?neros
total_drama_budget <- 0
total_action_budget <- 0
total_drama_film <- 0
total_action_film <- 0
count_drama_na <- 0
count_action_na <- 0
for (i in (1:length(budget))){
r <- budget[i]
#Buscando Drama
if(genre1[i] == "Drama" | genre2[i] == "Drama" | genre3[i] == "Drama"){
total_drama_film <- total_drama_film + 1
if(is.na(r)){
count_drama_na <- count_drama_na + 1
}
else{
total_drama_budget <- total_drama_budget + r
}
}
#Buscando Acci?n
if(genre1[i] == "Action" | genre2[i] == "Action" | genre3[i] == "Action"){
total_action_film <- total_action_film + 1
if(is.na(r)){
count_action_na <- count_action_na + 1
}
else{
total_action_budget <- total_action_budget + r
}
}
}
#Promedio de presupuesto para pel?culas de Drama
drama_mean <-  total_drama_budget / (total_drama_film - count_drama_na)
total_drama_budget <- total_drama_budget + drama_mean*count_drama_na
drama_mean <- total_drama_budget / total_drama_film
#Promedio de presupuesto para pel?culas de Acci?n
action_mean <-  total_action_budget / (total_action_film - count_action_na)
total_action_budget <- total_action_budget + action_mean*count_action_na
action_mean <- total_action_budget / total_action_film
#Preprocesamiento de datos para el presupuesto de pel?culas de Drama (sin NA)
only_drama_budget <- my_data[my_data$Genre1 == "Drama" | my_data$Genre2 == "Drama" | my_data$Genre3 == "Drama",]
only_drama_budget <- na.omit(only_drama_budget$Budget)
#varianza de pel?culas de Drama
var_drama <- var(only_drama_budget)
#Preprocesamiento de datos para el presupuesto de pel?culas de Acci?n (sin NA)
only_action_budget <- my_data[my_data$Genre1 == "Action" | my_data$Genre2 == "Action" | my_data$Genre3 == "Action",]
only_action_budget <- na.omit(only_action_budget$Budget)
#varianza de pel?culas de Acci?n
var_action <- var(only_action_budget)
#Para la Prueba de Hip?tesis de Medias se debe hacer primero una Prueba de Hip?tesis para las Varianzas
#Prueba de Hip?tesis de igualdad contra diferencia para las varianzas
var.test(only_drama_budget, only_action_budget)
#Como las varianzas son distintas, se hace la Prueba de Hip?tesis de Medias correspondiente
t.test(only_drama_budget, only_action_budget, alternative = "two.sided", var.equal = FALSE, conf.level = 0.05)
